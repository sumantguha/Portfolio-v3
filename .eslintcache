[{"/Users/sumant/Desktop/Chakra/app/src/index.js":"1","/Users/sumant/Desktop/Chakra/app/src/App.js":"2","/Users/sumant/Desktop/Chakra/app/src/reportWebVitals.js":"3","/Users/sumant/Desktop/Chakra/app/src/serviceWorker.js":"4","/Users/sumant/Desktop/Chakra/app/src/Pages/Projects.js":"5","/Users/sumant/Desktop/Chakra/app/src/Components/Card.js":"6","/Users/sumant/Desktop/Chakra/app/src/Components/Header.js":"7","/Users/sumant/Desktop/Chakra/app/src/Components/ContentModal.js":"8","/Users/sumant/Desktop/Chakra/app/src/Pages/Experience/ta.js":"9","/Users/sumant/Desktop/Chakra/app/src/Pages/Experience.js":"10","/Users/sumant/Desktop/Chakra/app/src/Pages/AboutMe.js":"11","/Users/sumant/Desktop/Chakra/app/src/Components/Navbar.js":"12","/Users/sumant/Desktop/Chakra/app/src/Components/Hamburger.js":"13","/Users/sumant/Desktop/Chakra/app/src/Pages/IntroSection.js":"14","/Users/sumant/Desktop/Chakra/app/src/Components/ButtonGroup.js":"15","/Users/sumant/Desktop/Chakra/app/src/Components/Footer.js":"16","/Users/sumant/Desktop/Chakra/app/src/Components/ImageSection.js":"17","/Users/sumant/Desktop/Chakra/app/src/Pages/Experience/ey.js":"18","/Users/sumant/Desktop/Chakra/app/src/Pages/Projects/codeit.js":"19","/Users/sumant/Desktop/Chakra/app/src/Pages/Projects/webapps.js":"20"},{"size":883,"mtime":1607947636310,"results":"21","hashOfConfig":"22"},{"size":2871,"mtime":1608528461351,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607846266695,"results":"24","hashOfConfig":"22"},{"size":5081,"mtime":1607846266696,"results":"25","hashOfConfig":"22"},{"size":3771,"mtime":1608370592157,"results":"26","hashOfConfig":"22"},{"size":3331,"mtime":1608520635262,"results":"27","hashOfConfig":"22"},{"size":442,"mtime":1608259730499,"results":"28","hashOfConfig":"22"},{"size":1597,"mtime":1608355856666,"results":"29","hashOfConfig":"22"},{"size":4442,"mtime":1608180957594,"results":"30","hashOfConfig":"22"},{"size":1825,"mtime":1608370581809,"results":"31","hashOfConfig":"22"},{"size":1835,"mtime":1608178656869,"results":"32","hashOfConfig":"22"},{"size":1026,"mtime":1608526647238,"results":"33","hashOfConfig":"22"},{"size":2018,"mtime":1608350481783,"results":"34","hashOfConfig":"22"},{"size":1503,"mtime":1608526567761,"results":"35","hashOfConfig":"22"},{"size":513,"mtime":1608190515243,"results":"36","hashOfConfig":"22"},{"size":397,"mtime":1608189828837,"results":"37","hashOfConfig":"22"},{"size":470,"mtime":1608523197089,"results":"38","hashOfConfig":"22"},{"size":2510,"mtime":1608260050255,"results":"39","hashOfConfig":"22"},{"size":4247,"mtime":1608356381702,"results":"40","hashOfConfig":"22"},{"size":3478,"mtime":1608370902425,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"shrpcb",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"/Users/sumant/Desktop/Chakra/app/src/index.js",[],["89","90"],"/Users/sumant/Desktop/Chakra/app/src/App.js",[],"/Users/sumant/Desktop/Chakra/app/src/reportWebVitals.js",[],"/Users/sumant/Desktop/Chakra/app/src/serviceWorker.js",[],"/Users/sumant/Desktop/Chakra/app/src/Pages/Projects.js",["91","92"],"import React from 'react';\nimport { Box, SimpleGrid, Center, Image } from '@chakra-ui/react';\nimport tt from '../images/tt.svg';\nimport webapps from '../images/webapps.svg';\nimport gradeit from '../images/gradeit.svg';\nimport maps from '../images/maps.svg';\nimport insurance from '../images/insurance.svg';\nimport message from '../images/message.svg';\nimport portfolio1 from '../images/portfolio1.svg';\nimport portfolio2 from '../images/portfolio2.svg';\n\nimport Header from '../Components/Header';\nimport Card from '../Components/Card';\n\nconst Projects = props => {\n  return (\n    <Box {...props}>\n      <Header description=\"case studies\" title=\"Projects\" />\n\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <SimpleGrid\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          columns={{ sm: 1, md: 2 }}\n          px=\"20\"\n          pt=\"10\"\n          maxW=\"100%\"\n          mx=\"auto\"\n        >\n          <Card\n            mr={20}\n            mb={20}\n            name=\"Code.it\"\n            description=\"HighSchool Education Platform\"\n            start=\"2020\"\n            end=\"Present\"\n            image={tt}\n            size=\"4xl\"\n            height={500}\n            descriptionSize=\"lg\"\n            newPost={true}\n          />\n\n          <Card\n            mr={20}\n            mb={20}\n            name=\"Nifty Web Apps\"\n            description=\"Build web apps for any programming assignment\"\n            start=\"2020\"\n            end=\"Present\"\n            image={webapps}\n            size=\"4xl\"\n            height={500}\n            descriptionSize=\"lg\"\n            newPost={true}\n          />\n        </SimpleGrid>\n\n        <SimpleGrid columns={{ sm: 1, md: 3 }} px=\"20\" maxW=\"100%\">\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Java Code Quality Linter\"\n            description=\"Web/Text Checker\"\n            start=\"2020\"\n            end=\"Present\"\n            image={insurance}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n            newPost={true}\n          />\n\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Course Data Migration\"\n            description=\"Writing jUnit tests\"\n            start=\"2020\"\n            end=\"Present\"\n            image={gradeit}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          />\n\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Husky Maps\"\n            description=\"Interactive Map Viz\"\n            start=\"2019\"\n            end=\"2020\"\n            image={maps}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          />\n\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Talkly\"\n            description=\"Reactive Message Platform\"\n            start=\"2020\"\n            end=\"Present\"\n            image={message}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          />\n\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Portfolio version 2\"\n            description=\"My old portfolio website\"\n            start=\"2020\"\n            end=\"Present\"\n            image={portfolio1}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          />\n\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Portfolio version 1\"\n            description=\"My old portfolio website\"\n            start=\"2019\"\n            end=\"2020\"\n            image={portfolio2}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          />\n        </SimpleGrid>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Projects;\n","/Users/sumant/Desktop/Chakra/app/src/Components/Card.js",[],"/Users/sumant/Desktop/Chakra/app/src/Components/Header.js",[],"/Users/sumant/Desktop/Chakra/app/src/Components/ContentModal.js",[],"/Users/sumant/Desktop/Chakra/app/src/Pages/Experience/ta.js",["93"],"import {\n  Box,\n  UnorderedList,\n  ListItem,\n  ModalBody,\n  Image,\n  ModalHeader,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport ta from '../../images/TA.jpg';\n\nconst TA = () => {\n  return (\n    <Box mt={2}>\n      <ModalBody>\n        The introductory CS series was my initiation to structured programming\n        as a means to explore the world of computing. I was immediately drawn to\n        concepts of algorithmic thinking and the rigorous underlying\n        mathematics. I decided to share my love for computation by working as a\n        teaching assistant for the CSE 14x community, a class that serves as a\n        stepping-stone into the new world of programming. It was the greatest\n        experience through my time in college and is the reason I am so\n        passionate about promoting computational literacy & inclusive education.\n        My responsabilities include:\n        <br />\n        <br />\n        <UnorderedList as=\"ul\" px={10}>\n          <ListItem>\n            Teaching topics ranging from basic programming to data structure\n            implementations & algorithms\n          </ListItem>\n          <ListItem>\n            Lead weekly recitation sections with around 25 students\n          </ListItem>\n          <ListItem>\n            Worked at introductory programming lab, open to more than 800\n            students enrolled in the introductory series\n          </ListItem>\n          <ListItem>Graded 800+ student midterms & final exams</ListItem>\n        </UnorderedList>\n        <br />I gained invaluable skills & qualities by working with unparalled\n        faculty and a tight-knit community.\n        <br />\n        <br />\n        <UnorderedList as=\"ul\" px={10}>\n          <ListItem>\n            I learned <strong>leadership</strong> skills: Teaching a class of 25\n            students brought out a plethora of challenges. It was a big\n            responsability that I had to take on, and I was thrilled to be part\n            of this bigger community through which I could make a difference and\n            impact the class that I loved. Progressing as a TA, I was tasked\n            with backreading (checking over other TAs grading and deciding\n            grading critera). I spent close to 20 hours a week answering\n            questions from other TAs, checking and rechecking every point. I\n            then worked with instructors to manage the migration the entire\n            codebase into new platforms and developed new tools for homework\n            autograders and server side networks.\n          </ListItem>\n          <ListItem>\n            This created opportunities to <strong>prioritize</strong> and better\n            my <strong>time management</strong>: Working on high impact projects\n            with faculty, teaching, backreading & taking my own classes all the\n            while brought into perspective what it means for 25+ students to\n            rely on me. Breaking up large tasks into manageable bits as well as\n            prioritizing high value tasks helped me be a dedicated TA and a\n            student\n          </ListItem>\n          <ListItem>\n            <strong>Communication</strong> ended up being the biggest takeway\n            for me: Each week, I had about 5 hours of meetings (& section) that\n            I has to present to. Explaining difficult concepts, problems &\n            solutions started off as a big challenge but making good use of the\n            resources avaialable to me really helped me break through the\n            barrier. Communication has stuck with me as I start interviewing for\n            internships and full time jobs in industry, by breaking down large\n            problems and thinking through them step by step\n          </ListItem>\n          <ListItem>\n            Being part of one of the most tight knight and amazing{' '}\n            <strong>community</strong> has given me friends for life. Getting to\n            know other TAs and instructors personally has been such a rewarding\n            experience. From just knowing TAs through classes and meeting them a\n            couple times a week, our community has progressed to hours of\n            complaining in the library, catching up over pizza parties, game\n            nights & going on adventures!\n          </ListItem>\n        </UnorderedList>\n      </ModalBody>\n      <Image mt={10} mx=\"auto\" src={ta} maxW=\"40%\" />\n    </Box>\n  );\n};\n\nexport default TA;\n","/Users/sumant/Desktop/Chakra/app/src/Pages/Experience.js",[],"/Users/sumant/Desktop/Chakra/app/src/Pages/AboutMe.js",[],"/Users/sumant/Desktop/Chakra/app/src/Components/Navbar.js",["94","95"],"import React from 'react';\nimport {\n  Box,\n  Flex,\n  Center,\n  useColorModeValue,\n  Spacer,\n  Button,\n  Link,\n} from '@chakra-ui/react';\n\nimport { ColorModeSwitcher } from '../App.js';\n\nimport Hamburger from './Hamburger';\n\nconst Navbar = props => {\n  const bg = useColorModeValue('blue.600', 'yellow.200');\n  return (\n    <Flex px=\"20\" py=\"10\" w=\"100%\" {...props}>\n      <Button\n        fontSize=\"xl\"\n        fontWeight=\"700\"\n        mr={10}\n        // colorScheme={bg}\n        variant=\"ghost\"\n        borderWidth=\"2px\"\n        borderColor={bg}\n        size=\"md\"\n      >\n        Resume\n      </Button>\n      <Spacer />\n      <Center>\n        {/* <Hamburger mr={10} /> */}\n        <Link fontSize=\"2xl\" fontWeight={700} mr={10}>\n          About\n        </Link>\n        <Link fontSize=\"2xl\" fontWeight={700} mr={10}>\n          Projects\n        </Link>\n        <Link fontSize=\"2xl\" fontWeight={700} mr={10}>\n          Work\n        </Link>\n        <ColorModeSwitcher />\n      </Center>\n    </Flex>\n  );\n};\n\nexport default Navbar;\n","/Users/sumant/Desktop/Chakra/app/src/Components/Hamburger.js",[],"/Users/sumant/Desktop/Chakra/app/src/Pages/IntroSection.js",["96","97","98","99"],"import React, { useState } from 'react';\nimport { useColorModeValue, Box, Heading, Text } from '@chakra-ui/react';\nimport ButtonGroup from '../Components/ButtonGroup';\nimport { useSpring, animated } from 'react-spring';\n\nimport {\n  FaFacebookF,\n  FaLinkedinIn,\n  FaGithub,\n  FaMailBulk,\n} from 'react-icons/fa';\n\nconst IntroSection = props => {\n  const [isBooped, setIsBooped] = useState(false);\n  const bg = useColorModeValue('blue', 'yellow');\n  const color = useColorModeValue('blue.600', 'yellow.200');\n  const highlightColor = useColorModeValue('red.500', 'blue.200');\n  return (\n    <Box>\n      <Box maxW=\"100%\" {...props}>\n        <Box mb=\"4\">\n          <Heading fontSize=\"8xl\" color={color}>\n            Creating and developing{' '}\n            <Text display=\"inline-block\" color={highlightColor}>\n              high quality\n            </Text>{' '}\n            content for the internet world\n          </Heading>\n        </Box>\n        <Box mt=\"4\">\n          <Text\n            textTransform=\"uppercase\"\n            letterSpacing=\"0.2rem\"\n            fontSize=\"xl\"\n            fontWeight=\"400\"\n          >\n            Sumant Guha\n          </Text>\n        </Box>\n      </Box>\n      <Box w=\"100%\" textAlign=\"center\">\n        <ButtonGroup bg={bg} name={<FaFacebookF />} />\n        <ButtonGroup bg={bg} name={<FaLinkedinIn />} />\n        <ButtonGroup bg={bg} name={<FaGithub />} />\n        <ButtonGroup bg={bg} name={<FaMailBulk />} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default IntroSection;\n","/Users/sumant/Desktop/Chakra/app/src/Components/ButtonGroup.js",[],"/Users/sumant/Desktop/Chakra/app/src/Components/Footer.js",[],"/Users/sumant/Desktop/Chakra/app/src/Components/ImageSection.js",[],"/Users/sumant/Desktop/Chakra/app/src/Pages/Experience/ey.js",[],"/Users/sumant/Desktop/Chakra/app/src/Pages/Projects/codeit.js",["100","101"],"import React from 'react';\nimport {\n  Box,\n  UnorderedList,\n  ListItem,\n  ModalBody,\n  Image,\n  Button,\n  Link,\n  HStack,\n  useColorModeValue,\n  Code,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { BsFileEarmarkCode } from 'react-icons/bs';\nimport { FaGooglePlay, FaAppStore } from 'react-icons/fa';\nimport CodeItLanding from '../../images/CodeItLanding.png';\nimport Settings from '../../images/Settings.png';\nimport SignUp from '../../images/SignUp.png';\nimport Courses from '../../images/Courses.png';\nimport Banner from '../../images/Banner.png';\n\nconst CodeIt = () => {\n  const firstColor = useColorModeValue('red', 'yellow');\n  return (\n    <Box mt={2}>\n      <ModalBody>\n        <Button\n          leftIcon={<FaGooglePlay />}\n          colorScheme={firstColor}\n          size=\"lg\"\n          mr={5}\n        >\n          <Link\n            isExternal={true}\n            _hover={{ textDecor: 'none' }}\n            as=\"a\"\n            href=\"https://play.google.com/store/apps/details?id=com.trainthem\"\n            isExternal={true}\n          >\n            Download Now (PlayStore)\n          </Link>\n        </Button>\n        <Button\n          leftIcon={<FaAppStore />}\n          colorScheme={firstColor}\n          size=\"lg\"\n          mr={5}\n        >\n          <Link\n            isExternal={true}\n            _hover={{ textDecor: 'none' }}\n            as=\"a\"\n            href=\"https://apps.apple.com/us/app/code-it/id1530425905\"\n            isExternal={true}\n          >\n            Download Now (App Store)\n          </Link>\n        </Button>\n        <Button leftIcon={<BsFileEarmarkCode />} colorScheme=\"blue\" size=\"lg\">\n          <Link\n            _hover={{ textDecor: 'none' }}\n            as=\"a\"\n            href=\"https://github.com/tusharpoddar/TrainThem\"\n            isExternal={true}\n          >\n            View Source Code\n          </Link>\n        </Button>\n        <br />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Development Frameworks:\n        </Heading>\n        <Code children=\"React Native\" mr={2} />\n        <Code children=\"Java\" mr={2} />\n        <Code children=\"Swift\" />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Design Frameworks:\n        </Heading>\n        <Code children=\"Figma\" />\n        <br />\n        <br />\n        Starting to explore the neoteric world of web design and app\n        development, I wanted to create content that was not only interesting\n        but also aligned with my goals of improving computer science pedagogy\n        and inclusivity through a school level.{' '}\n        <b>\n          <i>Code.it</i>\n        </b>{' '}\n        was born from this vision of augmenting the level of computational\n        education, deployed to empower underprivileged students by providing\n        free CS education. The app is targeted towards middle & high schoolers\n        offering courses in multiple programming languages (Python, Java, HTML,\n        CSS, JavaScript). We are unique and differentiate ourselves from other\n        platforms like KhanAcademy, Coursera, edX by:\n        <br />\n        <br />\n        <UnorderedList pl={10}>\n          <ListItem>\n            Working specifically with less fortunate schools to promote computer\n            science specific learning\n          </ListItem>\n          <ListItem>\n            Providing <i>free</i> computer science education with a 24 hour\n            continuous form\n          </ListItem>\n          <ListItem>\n            Lectures are <i>live</i> with an instructor for specific student\n            groups\n          </ListItem>\n        </UnorderedList>\n        <br />\n        Our design principles were focused on simplicity, but have important\n        interactive elements that hook users and keep them interested in the\n        flow. Almost designed in React Native, this app supports cross platform\n        use and hence increases access for everyone.\n        <HStack maxW=\"25%\" mt={5}>\n          <Image src={CodeItLanding} />\n          <Image src={Settings} />\n          <Image src={SignUp} />\n          <Image src={Courses} />\n        </HStack>\n        <Image mx=\"auto\" mt={10} maxW=\"60%\" src={Banner} />\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default CodeIt;\n","/Users/sumant/Desktop/Chakra/app/src/Pages/Projects/webapps.js",["102","103","104"],"import React from 'react';\nimport {\n  Box,\n  UnorderedList,\n  ListItem,\n  ModalBody,\n  Image,\n  Button,\n  Link,\n  HStack,\n  useColorModeValue,\n  Code,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { BsPlay, BsFileEarmarkCode, BsNewspaper } from 'react-icons/bs';\n\nimport Autocomplete from '../../images/autocomplete-web.png';\n\nconst Webapps = () => {\n  const firstColor = useColorModeValue('red', 'yellow');\n  //   const secondColor = useColorModeValue('teal', )\n  return (\n    <Box mt={2}>\n      <ModalBody>\n        <Button leftIcon={<BsNewspaper />} colorScheme=\"teal\" size=\"lg\" mr={5}>\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://arxiv.org/abs/2010.04671\"\n            isExternal={true}\n          >\n            Research Paper\n          </Link>\n        </Button>\n        <Button leftIcon={<BsPlay />} colorScheme={firstColor} size=\"lg\" mr={5}>\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://autocomplete-me.herokuapp.com/\"\n            isExternal={true}\n          >\n            Try Now\n          </Link>\n        </Button>\n        <Button leftIcon={<BsFileEarmarkCode />} colorScheme=\"blue\" size=\"lg\">\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://github.com/kevinlin1/nifty-web-apps\"\n            isExternal={true}\n          >\n            View Source Code\n          </Link>\n        </Button>\n        <br />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Development Frameworks:\n        </Heading>\n        <Code children=\"AMP\" mr={2} />\n        <Code children=\"React.js\" mr={2} />\n        <Code children=\"HTML\" mr={2} />\n        <Code children=\"CSS\" />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Design Frameworks:\n        </Heading>\n        <Code children=\"Figma\" />\n        <br />\n        <br />\n        Over Summer, I worked with professor{' '}\n        <Link\n          color=\"blue.600\"\n          fontWeight={600}\n          as=\"a\"\n          href=\"https://kevinl.info/\"\n          isExternal={true}\n        >\n          Kevin Lin\n        </Link>{' '}\n        to develop more interactive webapps for text-based programming\n        assessments. All of the take assignments for the introductory computer\n        science series that we currently support have largely text-based\n        specifications with low student interactivity. This paper goes into the\n        process of connecting student written code to a simple front end\n        interface that dynamically responds to user interactions. Since all of\n        the front end visualizations are based on AMP and direct HTML, we have\n        standarized templates for developing these apps. Instructors and\n        students alike can run and modify these web apps on their own computers\n        or deploy their apps online for access from any smart device at no cost.\n        The tutorial presents examples from CS1 and CS2 courses in Python and\n        Java, but the ideas apply generally. We are presenting this work at{' '}\n        <Link\n          color=\"blue.600\"\n          fontWeight={600}\n          as=\"a\"\n          href=\"https://sigcse2021.sigcse.org/\"\n          isExternal={true}\n        >\n          SIGCSE 2021\n        </Link>{' '}\n        !\n        <Image src={Autocomplete} mt={5} maxW=\"80%\" mx=\"auto\" />\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default Webapps;\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":27,"nodeType":"111","messageId":"112","endLine":2,"endColumn":33},{"ruleId":"109","severity":1,"message":"113","line":2,"column":35,"nodeType":"111","messageId":"112","endLine":2,"endColumn":40},{"ruleId":"109","severity":1,"message":"114","line":7,"column":3,"nodeType":"111","messageId":"112","endLine":7,"endColumn":14},{"ruleId":"109","severity":1,"message":"115","line":3,"column":3,"nodeType":"111","messageId":"112","endLine":3,"endColumn":6},{"ruleId":"109","severity":1,"message":"116","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":17},{"ruleId":"109","severity":1,"message":"117","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":19},{"ruleId":"109","severity":1,"message":"118","line":4,"column":21,"nodeType":"111","messageId":"112","endLine":4,"endColumn":29},{"ruleId":"109","severity":1,"message":"119","line":14,"column":10,"nodeType":"111","messageId":"112","endLine":14,"endColumn":18},{"ruleId":"109","severity":1,"message":"120","line":14,"column":20,"nodeType":"111","messageId":"112","endLine":14,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":40,"column":13,"nodeType":"123","endLine":40,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":56,"column":13,"nodeType":"123","endLine":56,"endColumn":30},{"ruleId":"109","severity":1,"message":"124","line":4,"column":3,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"125","line":5,"column":3,"nodeType":"111","messageId":"112","endLine":5,"endColumn":11},{"ruleId":"109","severity":1,"message":"126","line":10,"column":3,"nodeType":"111","messageId":"112","endLine":10,"endColumn":9},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Center' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'ModalHeader' is defined but never used.","'Box' is defined but never used.","'Hamburger' is defined but never used.","'useSpring' is defined but never used.","'animated' is defined but never used.","'isBooped' is assigned a value but never used.","'setIsBooped' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'UnorderedList' is defined but never used.","'ListItem' is defined but never used.","'HStack' is defined but never used.","no-global-assign","no-unsafe-negation"]